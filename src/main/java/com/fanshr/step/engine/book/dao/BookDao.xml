<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanshr.step.engine.book.dao.BookDao">


    <resultMap id="bookMap" type="com.fanshr.step.engine.book.entity.Book">
        <id column="id" property="id"/>
        <result column="isbn" property="isbn"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="remark" property="remark"/>
        <result column="publisher" property="publisher"/>
        <result column="published_date" property="publishedDate"/>
        <result column="summary" property="summary"/>
        <result column="canceled" property="canceled"/>


        <result column="show_order" property="showOrder"/>
        <result column="uuid" property="uuid"/>
        <result column="creator_id" property="creatorId"/>
        <result column="create_date" property="createDate"/>
        <result column="create_time" property="createTime"/>
        <result column="create_at" property="createAt"/>
        <result column="modifier_id" property="modifierId"/>
        <result column="modify_date" property="modifyDate"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="modify_at" property="modifyAt"/>
        <result column="type_id" property="typeId"/>
        <result column="language_id" property="languageId"/>
        <result column="authors" property="authors"/>
        <result column="translators" property="translators"/>

        <association property="bookType" javaType="com.fanshr.step.engine.book.entity.BookType"
                     select="com.fanshr.step.engine.book.dao.BookTypeDao.queryOne" column="{id = bookType_id}"/>
        <!--    <id column="bookType_id" property="id"/>-->
        <!--    <result column="title" property="title"/>-->
        <!--    <result column="description" property="description"/>-->
        <!--    <result column="remark" property="remark"/>-->
        <!--    <result column="show_order" property="showOrder"/>-->
        <!--    <result column="create_at" property="createAt"/>-->
        <!--    <result column="modify_at" property="modifyAt"/>-->
        <!--</association>-->
        <association property="language" javaType="com.fanshr.step.engine.common.entity.Language">
            <id column="language_id" property="id"/>
            <result column="description" property="description"/>
            <result column="flag" property="flag"/>
        </association>

        <collection property="authorList" javaType="java.util.ArrayList"
                    ofType="com.fanshr.step.engine.common.entity.Celebrity"
                    select="com.fanshr.step.engine.book.dao.CelebrityDao.queryByIds" column="{ids=author}"/>
        <!--    <id column="tag_id" property="id"/>-->
        <!--    <result column="tag_title" property="title"/>-->
        <!--</collection>-->
    </resultMap>


    <select id="queryList" resultMap="bookMap">
        select id, isbn, title, description, type_id, publisher, published_date, summary, remark, translators,
        language_id, authors, show_order, canceled, uuid, creator_id, create_date, create_time, create_at, modifier_id,
        modify_date, modify_time, modify_at
        from set_book
        <where>
            <if test="condition.title!=null">
                and lower(replace(title,' ','')) like concat('%',#{condition.title},'%')
            </if>
            <if test="condition.description!=null">
                and lower(replace(description,' ','')) like concat('%',#{condition.description},'%')
            </if>
            <if test="condition.remark!=null">
                and remark like concat('%',#{condition.remark},'%')
            </if>

            <if test="condition.bookTypeId!=null">
                and type_id = #{condition.typeId}
            </if>
            <if test="condition.authors!=null">
                and
                <foreach collection="condition.authors.split(',')" index="index" item="item" open="(" separator="OR"
                         close=")">
                    find_in_set(${item},authors)
                </foreach>
            </if>
        </where>
        order by show_order desc
        limit #{rowIndex},#{pageSize}
    </select>
    <select id="queryCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        set_book
        <where>
            <if test="condition.title!=null">
                and lower(replace(title,' ','')) like concat('%',#{condition.title},'%')
            </if>
            <if test="condition.description!=null">
                and lower(replace(description,' ','')) like concat('%',#{condition.description},'%')
            </if>
            <if test="condition.remark!=null">
                and remark like concat('%',#{condition.remark},'%')
            </if>

            <if test="condition.bookTypeId!=null">
                and type_id = #{condition.typeId}
            </if>
            <if test="condition.authors!=null">
                and
                <foreach collection="condition.authors.split(',')" index="index" item="item" open="(" separator="OR"
                         close=")">
                    find_in_set(${item},authors)
                </foreach>
            </if>
        </where>
    </select>


    <select id="queryOne" resultMap="bookMap" parameterType="Integer">
        SELECT id, isbn, title, description, type_id, publisher, published_date, summary, remark, translators, language_id, authors, show_order, canceled, uuid, creator_id, create_date, create_time, create_at, modifier_id, modify_date, modify_time, modify_at
        FROM set_book
        WHERE id = #{id}
    </select>
    <select id="list" resultMap="bookMap">
        select id, isbn, title, description, type_id, publisher, published_date, summary, remark, translators, language_id, authors, show_order, canceled, uuid, creator_id, create_date, create_time, create_at, modifier_id, modify_date, modify_time, modify_at
        from set_book
        <where>
            <if test="condition.title!=null">
                and lower(replace(title,' ','')) like concat('%',#{condition.title},'%')
            </if>
            <if test="condition.description!=null">
                and lower(replace(description,' ','')) like concat('%',#{condition.description},'%')
            </if>
            <if test="condition.remark!=null">
                and remark like concat('%',#{condition.remark},'%')
            </if>

            <if test="condition.bookTypeId!=null">
                and type_id = #{condition.typeId}
            </if>
            <if test="condition.authors!=null">
                and
                <foreach collection="condition.authors.split(',')" index="index" item="item" open="(" separator="OR"
                         close=")">
                    find_in_set(${item},authors)
                </foreach>
            </if>
        </where>
        order by show_order

    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into set_book (isbn, title, description, type_id, publisher, published_date, summary, remark, translators,
                              language_id, authors, show_order, canceled, uuid, creator_id, create_date, create_time, create_at, modifier_id,
                              modify_date, modify_time, modify_at)
        values (#{isbn}, #{title}, #{description}, #{typeId}, #{publisher}, #{publishDate}, #{summary}, #{remark}, #{translators},
                #{languageId}, #{authors}, #{showOrder},#{canceled}, #{uuid}, #{creatorId}, #{createDate}, #{createTime}, #{createAt},
                #{modifierId}, #{modifyDate}, #{modifyTime}, #{modifyAt})

    </insert>

    <update id="update" parameterType="com.fanshr.step.engine.book.entity.Book">
        update set_book
        <set>
            <if test="title!=null">title=#{title},</if>
            <if test="description!=null">description=#{description},</if>
            <if test="remark!=null">remark=#{remark},</if>
            <if test="typeId!=null">type_id=#{typeId},</if>
            <if test="authors!=null">authors=#{authors},</if>
            <if test="showOrder!=null">show_order=#{showOrder},</if>
            <if test="modifyAt!=null">modify_at=#{modifyAt},</if>
        </set>
        where id=#{id}
    </update>
    <delete id="delete">
        DELETE
        FROM set_book
        WHERE id = #{id}
    </delete>
    <delete id="batchDelete" parameterType="int">
        delete from set_book where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>